
/*
 * This file was generated by Meeduse on Monday, February 6, 2023 at 5:38:56 PM CET
 */


MACHINE 
	
	cM_DSL

DEFINITIONS
	


	END_OF_GENERATED_DEFINITIONS_FOR == cM_DSL;
	
	/*
	 * Start of user code DEFINITIONS (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	

SETS
	
	CM_AS;
	INFRASTRUCTURE;
	COMMUNICATION;
	CONFIGURATION;
	APPLICATION;
	ACTION;
	OPTIMISATIONALGO

VARIABLES
	
	CM,
	Infrastructure,
	Communication,
	Configuration,
	Application,
	Action,
	OptimisationAlgo,
	A_communication_infrastructure,
	A_infrastructure_cM,
	A_infr_configuration,
	A_action_application,
	A_optimisationalgo_application,
	A_app_configuration,
	A_configuration_cM,
	A_application_cM,
	A_selectConf_cM,
	nameCMM,
	modeInf,
	nameConf,
	QoS,
	isValid,
	modeApp

INVARIANT
	
	/*
	 * Start of user code INVARIANT (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	
	
	CM : FIN(CM_AS) &
	Infrastructure : FIN(INFRASTRUCTURE) &
	Communication : FIN(COMMUNICATION) &
	Configuration : FIN(CONFIGURATION) &
	Application : FIN(APPLICATION) &
	Action : FIN(ACTION) &
	OptimisationAlgo : FIN(OPTIMISATIONALGO) &
	A_communication_infrastructure : Infrastructure +-> Communication &
	A_infrastructure_cM : Infrastructure +-> CM &
	A_infr_configuration : Configuration --> Infrastructure &
	A_action_application : Application <-> Action &
	A_optimisationalgo_application : Application +-> OptimisationAlgo &
	A_app_configuration : Configuration --> Application &
	A_configuration_cM : Configuration +-> CM &
	A_application_cM : Application +-> CM &
	A_selectConf_cM : CM >+> Configuration &
	nameCMM : CM +-> STRING &
	modeInf : Infrastructure +-> STRING &
	nameConf : Configuration +-> STRING &
	QoS : Configuration +-> REAL &
	isValid : Configuration +-> BOOL &
	modeApp : Application +-> STRING

INITIALISATION
	
	CM := {} ||
	Infrastructure := {} ||
	Communication := {} ||
	Configuration := {} ||
	Application := {} ||
	Action := {} ||
	OptimisationAlgo := {} ||
	A_communication_infrastructure := {} ||
	A_infrastructure_cM := {} ||
	A_infr_configuration := {} ||
	A_action_application := {} ||
	A_optimisationalgo_application := {} ||
	A_app_configuration := {} ||
	A_configuration_cM := {} ||
	A_application_cM := {} ||
	A_selectConf_cM := {} ||
	nameCMM := {} ||
	modeInf := {} ||
	nameConf := {} ||
	QoS := {} ||
	isValid := {} ||
	modeApp := {}

OPERATIONS
	
	/*
	 * Start of user code OPERATIONS (NOT GENERATED)
	 */
	
	/*
	 * End of user code
	 */
	

	CM_NEW(aCM) = 
	PRE	aCM : CM_AS &
		aCM /: CM
		
	THEN 
		CM := CM \/ {aCM}
	END;

	Infrastructure_NEW(aInfrastructure) = 
	PRE	aInfrastructure : INFRASTRUCTURE &
		aInfrastructure /: Infrastructure
		
	THEN 
		Infrastructure := Infrastructure \/ {aInfrastructure}
	END;

	Communication_NEW(aCommunication) = 
	PRE	aCommunication : COMMUNICATION &
		aCommunication /: Communication
		
	THEN 
		Communication := Communication \/ {aCommunication}
	END;

	Configuration_NEW(aConfiguration,aInfr,aApp) = 
	PRE	aConfiguration : CONFIGURATION &
		aInfr : Infrastructure &
		aApp : Application &
		aConfiguration /: Configuration
		
	THEN 
		Configuration := Configuration \/ {aConfiguration} ||
		A_infr_configuration := A_infr_configuration \/ {(aConfiguration |-> aInfr)} ||
		A_app_configuration := A_app_configuration \/ {(aConfiguration |-> aApp)}
	END;

	Application_NEW(aApplication) = 
	PRE	aApplication : APPLICATION &
		aApplication /: Application
		
	THEN 
		Application := Application \/ {aApplication}
	END;

	Action_NEW(aAction) = 
	PRE	aAction : ACTION &
		aAction /: Action
		
	THEN 
		Action := Action \/ {aAction}
	END;

	OptimisationAlgo_NEW(aOptimisationAlgo) = 
	PRE	aOptimisationAlgo : OPTIMISATIONALGO &
		aOptimisationAlgo /: OptimisationAlgo
		
	THEN 
		OptimisationAlgo := OptimisationAlgo \/ {aOptimisationAlgo}
	END;

	CM_Free(aCM) = 
	PRE	aCM : CM
		
	THEN 
		CM := CM - {aCM} ||
		A_infrastructure_cM := A_infrastructure_cM |>> {aCM} ||
		A_configuration_cM := A_configuration_cM |>> {aCM} ||
		A_application_cM := A_application_cM |>> {aCM} ||
		A_selectConf_cM := {aCM} <<| A_selectConf_cM ||
		nameCMM := {aCM} <<| nameCMM
	END;

	Infrastructure_Free(aInfrastructure) = 
	PRE	aInfrastructure : Infrastructure &
		A_infr_configuration~[{aInfrastructure}] = {}
		
	THEN 
		Infrastructure := Infrastructure - {aInfrastructure} ||
		A_communication_infrastructure := {aInfrastructure} <<| A_communication_infrastructure ||
		A_infrastructure_cM := {aInfrastructure} <<| A_infrastructure_cM ||
		A_infr_configuration := A_infr_configuration |>> {aInfrastructure} ||
		modeInf := {aInfrastructure} <<| modeInf
	END;

	Communication_Free(aCommunication) = 
	PRE	aCommunication : Communication
		
	THEN 
		Communication := Communication - {aCommunication} ||
		A_communication_infrastructure := A_communication_infrastructure |>> {aCommunication}
	END;

	Configuration_Free(aConfiguration) = 
	PRE	aConfiguration : Configuration
		
	THEN 
		Configuration := Configuration - {aConfiguration} ||
		A_infr_configuration := {aConfiguration} <<| A_infr_configuration ||
		A_app_configuration := {aConfiguration} <<| A_app_configuration ||
		A_configuration_cM := {aConfiguration} <<| A_configuration_cM ||
		A_selectConf_cM := A_selectConf_cM |>> {aConfiguration} ||
		nameConf := {aConfiguration} <<| nameConf ||
		QoS := {aConfiguration} <<| QoS ||
		isValid := {aConfiguration} <<| isValid
	END;

	Application_Free(aApplication) = 
	PRE	aApplication : Application &
		A_app_configuration~[{aApplication}] = {}
		
	THEN 
		Application := Application - {aApplication} ||
		A_action_application := {aApplication} <<| A_action_application ||
		A_optimisationalgo_application := {aApplication} <<| A_optimisationalgo_application ||
		A_app_configuration := A_app_configuration |>> {aApplication} ||
		A_application_cM := {aApplication} <<| A_application_cM ||
		modeApp := {aApplication} <<| modeApp
	END;

	Action_Free(aAction) = 
	PRE	aAction : Action
		
	THEN 
		Action := Action - {aAction} ||
		A_action_application := A_action_application |>> {aAction}
	END;

	OptimisationAlgo_Free(aOptimisationAlgo) = 
	PRE	aOptimisationAlgo : OptimisationAlgo
		
	THEN 
		OptimisationAlgo := OptimisationAlgo - {aOptimisationAlgo} ||
		A_optimisationalgo_application := A_optimisationalgo_application |>> {aOptimisationAlgo}
	END;

	result <-- GetInfrastructure(aCM) = 
	PRE	aCM : CM &
		aCM : ran(A_infrastructure_cM)
		
	THEN 
		result := A_infrastructure_cM~[{aCM}]
	END;

	result <-- GetConfiguration(aCM) = 
	PRE	aCM : CM &
		aCM : ran(A_configuration_cM)
		
	THEN 
		result := A_configuration_cM~[{aCM}]
	END;

	result <-- GetApplication(aCM) = 
	PRE	aCM : CM &
		aCM : ran(A_application_cM)
		
	THEN 
		result := A_application_cM~[{aCM}]
	END;

	result <-- GetSelectConf(aCM) = 
	PRE	aCM : CM &
		aCM : dom(A_selectConf_cM)
		
	THEN 
		result := A_selectConf_cM(aCM)
	END;

	result <-- GetCommunication(aInfrastructure) = 
	PRE	aInfrastructure : Infrastructure &
		aInfrastructure : dom(A_communication_infrastructure)
		
	THEN 
		result := A_communication_infrastructure(aInfrastructure)
	END;

	result <-- GetInfr(aConfiguration) = 
	PRE	aConfiguration : Configuration &
		aConfiguration : dom(A_infr_configuration)
		
	THEN 
		result := A_infr_configuration(aConfiguration)
	END;

	result <-- GetApp(aConfiguration) = 
	PRE	aConfiguration : Configuration &
		aConfiguration : dom(A_app_configuration)
		
	THEN 
		result := A_app_configuration(aConfiguration)
	END;

	result <-- GetAction(aApplication) = 
	PRE	aApplication : Application &
		aApplication : dom(A_action_application)
		
	THEN 
		result := A_action_application[{aApplication}]
	END;

	result <-- GetOptimisationalgo(aApplication) = 
	PRE	aApplication : Application &
		aApplication : dom(A_optimisationalgo_application)
		
	THEN 
		result := A_optimisationalgo_application(aApplication)
	END;

	SetInfrastructure(aCM,theInfrastructure) = 
	PRE	aCM : CM &
		theInfrastructure : FIN(Infrastructure) &
		(theInfrastructure * {aCM}) /<: A_infrastructure_cM &
		!added.( added : theInfrastructure => A_infrastructure_cM[{added}] = {})
		
	THEN 
		A_infrastructure_cM := (A_infrastructure_cM |>> {aCM}) \/ (theInfrastructure * {aCM})
	END;

	SetConfiguration(aCM,theConfiguration) = 
	PRE	aCM : CM &
		theConfiguration : FIN(Configuration) &
		(theConfiguration * {aCM}) /<: A_configuration_cM &
		!added.( added : theConfiguration => A_configuration_cM[{added}] = {})
		
	THEN 
		A_configuration_cM := (A_configuration_cM |>> {aCM}) \/ (theConfiguration * {aCM})
	END;

	SetApplication(aCM,theApplication) = 
	PRE	aCM : CM &
		theApplication : FIN(Application) &
		(theApplication * {aCM}) /<: A_application_cM &
		!added.( added : theApplication => A_application_cM[{added}] = {})
		
	THEN 
		A_application_cM := (A_application_cM |>> {aCM}) \/ (theApplication * {aCM})
	END;

	SetSelectConf(aCM,aSelectConf) = 
	PRE	aCM : CM &
		aSelectConf : Configuration &
		{(aCM |-> aSelectConf)} /<: A_selectConf_cM &
		A_selectConf_cM~[{aSelectConf}] = {}
		
	THEN 
		A_selectConf_cM := ({aCM} <<| A_selectConf_cM) \/ {(aCM |-> aSelectConf)}
	END;

	SetCommunication(aInfrastructure,aCommunication) = 
	PRE	aInfrastructure : Infrastructure &
		aCommunication : Communication &
		{(aInfrastructure |-> aCommunication)} /<: A_communication_infrastructure
		
	THEN 
		A_communication_infrastructure := ({aInfrastructure} <<| A_communication_infrastructure) \/ {(aInfrastructure |-> aCommunication)}
	END;

	SetInfr(aConfiguration,aInfr) = 
	PRE	aConfiguration : Configuration &
		aInfr : Infrastructure &
		{(aConfiguration |-> aInfr)} /<: A_infr_configuration
		
	THEN 
		A_infr_configuration := ({aConfiguration} <<| A_infr_configuration) \/ {(aConfiguration |-> aInfr)}
	END;

	SetApp(aConfiguration,aApp) = 
	PRE	aConfiguration : Configuration &
		aApp : Application &
		{(aConfiguration |-> aApp)} /<: A_app_configuration
		
	THEN 
		A_app_configuration := ({aConfiguration} <<| A_app_configuration) \/ {(aConfiguration |-> aApp)}
	END;

	SetAction(aApplication,theAction) = 
	PRE	aApplication : Application &
		theAction : FIN(Action) &
		({aApplication} * theAction) /<: A_action_application
		
	THEN 
		A_action_application := ({aApplication} <<| A_action_application) \/ ({aApplication} * theAction)
	END;

	SetOptimisationalgo(aApplication,aOptimisationalgo) = 
	PRE	aApplication : Application &
		aOptimisationalgo : OptimisationAlgo &
		{(aApplication |-> aOptimisationalgo)} /<: A_optimisationalgo_application
		
	THEN 
		A_optimisationalgo_application := ({aApplication} <<| A_optimisationalgo_application) \/ {(aApplication |-> aOptimisationalgo)}
	END;

	UnsetInfrastructure(aCM) = 
	PRE	aCM : CM
		
	THEN 
		A_infrastructure_cM := A_infrastructure_cM |>> {aCM}
	END;

	UnsetConfiguration(aCM) = 
	PRE	aCM : CM
		
	THEN 
		A_configuration_cM := A_configuration_cM |>> {aCM}
	END;

	UnsetApplication(aCM) = 
	PRE	aCM : CM
		
	THEN 
		A_application_cM := A_application_cM |>> {aCM}
	END;

	UnsetSelectConf(aCM) = 
	PRE	aCM : CM
		
	THEN 
		A_selectConf_cM := {aCM} <<| A_selectConf_cM
	END;

	UnsetCommunication(aInfrastructure) = 
	PRE	aInfrastructure : Infrastructure
		
	THEN 
		A_communication_infrastructure := {aInfrastructure} <<| A_communication_infrastructure
	END;

	UnsetAction(aApplication) = 
	PRE	aApplication : Application
		
	THEN 
		A_action_application := {aApplication} <<| A_action_application
	END;

	UnsetOptimisationalgo(aApplication) = 
	PRE	aApplication : Application
		
	THEN 
		A_optimisationalgo_application := {aApplication} <<| A_optimisationalgo_application
	END;

	AddInfrastructure(aCM,aInfrastructure) = 
	PRE	aCM : CM &
		aInfrastructure : Infrastructure &
		(aInfrastructure |-> aCM) /: A_infrastructure_cM &
		A_infrastructure_cM[{aInfrastructure}] = {}
		
	THEN 
		A_infrastructure_cM := A_infrastructure_cM \/ {(aInfrastructure |-> aCM)}
	END;

	AddConfiguration(aCM,aConfiguration) = 
	PRE	aCM : CM &
		aConfiguration : Configuration &
		(aConfiguration |-> aCM) /: A_configuration_cM &
		A_configuration_cM[{aConfiguration}] = {}
		
	THEN 
		A_configuration_cM := A_configuration_cM \/ {(aConfiguration |-> aCM)}
	END;

	AddApplication(aCM,aApplication) = 
	PRE	aCM : CM &
		aApplication : Application &
		(aApplication |-> aCM) /: A_application_cM &
		A_application_cM[{aApplication}] = {}
		
	THEN 
		A_application_cM := A_application_cM \/ {(aApplication |-> aCM)}
	END;

	AddAction(aApplication,aAction) = 
	PRE	aApplication : Application &
		aAction : Action &
		(aApplication |-> aAction) /: A_action_application
		
	THEN 
		A_action_application := A_action_application \/ {(aApplication |-> aAction)}
	END;

	RemoveInfrastructure(aCM,aInfrastructure) = 
	PRE	aCM : CM &
		aInfrastructure : Infrastructure &
		(aInfrastructure |-> aCM) : A_infrastructure_cM
		
	THEN 
		A_infrastructure_cM := A_infrastructure_cM - {(aInfrastructure |-> aCM)}
	END;

	RemoveConfiguration(aCM,aConfiguration) = 
	PRE	aCM : CM &
		aConfiguration : Configuration &
		(aConfiguration |-> aCM) : A_configuration_cM
		
	THEN 
		A_configuration_cM := A_configuration_cM - {(aConfiguration |-> aCM)}
	END;

	RemoveApplication(aCM,aApplication) = 
	PRE	aCM : CM &
		aApplication : Application &
		(aApplication |-> aCM) : A_application_cM
		
	THEN 
		A_application_cM := A_application_cM - {(aApplication |-> aCM)}
	END;

	RemoveSelectConf(aCM,aSelectConf) = 
	PRE	aCM : CM &
		aSelectConf : Configuration &
		(aCM |-> aSelectConf) : A_selectConf_cM
		
	THEN 
		A_selectConf_cM := A_selectConf_cM - {(aCM |-> aSelectConf)}
	END;

	RemoveCommunication(aInfrastructure,aCommunication) = 
	PRE	aInfrastructure : Infrastructure &
		aCommunication : Communication &
		(aInfrastructure |-> aCommunication) : A_communication_infrastructure
		
	THEN 
		A_communication_infrastructure := A_communication_infrastructure - {(aInfrastructure |-> aCommunication)}
	END;

	RemoveAction(aApplication,aAction) = 
	PRE	aApplication : Application &
		aAction : Action &
		(aApplication |-> aAction) : A_action_application
		
	THEN 
		A_action_application := A_action_application - {(aApplication |-> aAction)}
	END;

	RemoveOptimisationalgo(aApplication,aOptimisationalgo) = 
	PRE	aApplication : Application &
		aOptimisationalgo : OptimisationAlgo &
		(aApplication |-> aOptimisationalgo) : A_optimisationalgo_application
		
	THEN 
		A_optimisationalgo_application := A_optimisationalgo_application - {(aApplication |-> aOptimisationalgo)}
	END;

	result <-- GetNameCMM(aCM) = 
	PRE	aCM : CM &
		aCM : dom(nameCMM)
		
	THEN 
		result := nameCMM(aCM)
	END;

	result <-- GetModeInf(aInfrastructure) = 
	PRE	aInfrastructure : Infrastructure &
		aInfrastructure : dom(modeInf)
		
	THEN 
		result := modeInf(aInfrastructure)
	END;

	result <-- GetNameConf(aConfiguration) = 
	PRE	aConfiguration : Configuration &
		aConfiguration : dom(nameConf)
		
	THEN 
		result := nameConf(aConfiguration)
	END;

	result <-- GetQoS(aConfiguration) = 
	PRE	aConfiguration : Configuration &
		aConfiguration : dom(QoS)
		
	THEN 
		result := QoS(aConfiguration)
	END;

	result <-- GetIsValid(aConfiguration) = 
	PRE	aConfiguration : Configuration &
		aConfiguration : dom(isValid)
		
	THEN 
		result := isValid(aConfiguration)
	END;

	result <-- GetModeApp(aApplication) = 
	PRE	aApplication : Application &
		aApplication : dom(modeApp)
		
	THEN 
		result := modeApp(aApplication)
	END;

	SetNameCMM(aCM,aNameCMM) = 
	PRE	aCM : CM &
		aNameCMM : STRING
		
	THEN 
		nameCMM := ({aCM} <<| nameCMM)  \/ {(aCM |-> aNameCMM)}
	END;

	SetModeInf(aInfrastructure,aModeInf) = 
	PRE	aInfrastructure : Infrastructure &
		aModeInf : STRING
		
	THEN 
		modeInf := ({aInfrastructure} <<| modeInf)  \/ {(aInfrastructure |-> aModeInf)}
	END;

	SetNameConf(aConfiguration,aNameConf) = 
	PRE	aConfiguration : Configuration &
		aNameConf : STRING
		
	THEN 
		nameConf := ({aConfiguration} <<| nameConf)  \/ {(aConfiguration |-> aNameConf)}
	END;

	SetQoS(aConfiguration,aQoS) = 
	PRE	aConfiguration : Configuration &
		aQoS : REAL
		
	THEN 
		QoS := ({aConfiguration} <<| QoS)  \/ {(aConfiguration |-> aQoS)}
	END;

	SetIsValid(aConfiguration,aIsValid) = 
	PRE	aConfiguration : Configuration &
		aIsValid : BOOL
		
	THEN 
		isValid := ({aConfiguration} <<| isValid)  \/ {(aConfiguration |-> aIsValid)}
	END;

	SetModeApp(aApplication,aModeApp) = 
	PRE	aApplication : Application &
		aModeApp : STRING
		
	THEN 
		modeApp := ({aApplication} <<| modeApp)  \/ {(aApplication |-> aModeApp)}
	END;

	UnsetNameCMM(aCM) = 
	PRE	aCM : CM
		
	THEN 
		nameCMM := {aCM} <<| nameCMM
	END;

	UnsetModeInf(aInfrastructure) = 
	PRE	aInfrastructure : Infrastructure
		
	THEN 
		modeInf := {aInfrastructure} <<| modeInf
	END;

	UnsetNameConf(aConfiguration) = 
	PRE	aConfiguration : Configuration
		
	THEN 
		nameConf := {aConfiguration} <<| nameConf
	END;

	UnsetQoS(aConfiguration) = 
	PRE	aConfiguration : Configuration
		
	THEN 
		QoS := {aConfiguration} <<| QoS
	END;

	UnsetIsValid(aConfiguration) = 
	PRE	aConfiguration : Configuration
		
	THEN 
		isValid := {aConfiguration} <<| isValid
	END;

	UnsetModeApp(aApplication) = 
	PRE	aApplication : Application
		
	THEN 
		modeApp := {aApplication} <<| modeApp
	END;

	RemoveNameCMM(aCM,aNameCMM) = 
	PRE	aCM : CM &
		aNameCMM : STRING &
		{(aCM |-> aNameCMM)} <: nameCMM
		
	THEN 
		nameCMM := nameCMM - {(aCM |-> aNameCMM)}
	END;

	RemoveModeInf(aInfrastructure,aModeInf) = 
	PRE	aInfrastructure : Infrastructure &
		aModeInf : STRING &
		{(aInfrastructure |-> aModeInf)} <: modeInf
		
	THEN 
		modeInf := modeInf - {(aInfrastructure |-> aModeInf)}
	END;

	RemoveNameConf(aConfiguration,aNameConf) = 
	PRE	aConfiguration : Configuration &
		aNameConf : STRING &
		{(aConfiguration |-> aNameConf)} <: nameConf
		
	THEN 
		nameConf := nameConf - {(aConfiguration |-> aNameConf)}
	END;

	RemoveQoS(aConfiguration,aQoS) = 
	PRE	aConfiguration : Configuration &
		aQoS : REAL &
		{(aConfiguration |-> aQoS)} <: QoS
		
	THEN 
		QoS := QoS - {(aConfiguration |-> aQoS)}
	END;

	RemoveIsValid(aConfiguration,aIsValid) = 
	PRE	aConfiguration : Configuration &
		aIsValid : BOOL &
		{(aConfiguration |-> aIsValid)} <: isValid
		
	THEN 
		isValid := isValid - {(aConfiguration |-> aIsValid)}
	END;

	RemoveModeApp(aApplication,aModeApp) = 
	PRE	aApplication : Application &
		aModeApp : STRING &
		{(aApplication |-> aModeApp)} <: modeApp
		
	THEN 
		modeApp := modeApp - {(aApplication |-> aModeApp)}
	END


END
